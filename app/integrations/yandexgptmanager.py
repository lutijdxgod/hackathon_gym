from fastapi import HTTPException, status
import httpx
from ..config import settings


def send_request(message: str, msg_format: str) -> dict:
    headers = {"Content-Type": "application/json", "Authorization": f"Bearer {settings.yandexgpt.iam_token}"}
    prompt = {
        "modelUri": settings.yandexgpt.uri,
        "completionOptions": {"stream": False, "temperature": 0.3, "maxTokens": "1000"},
        "messages": [
            {
                "role": "system",
                "text": "Представь, что ты опытный фитнесс-тренер. У тебя огромный стаж как выступления на соревнованиях, так и обучения своих подопечных "
                + "И вот, в очередной раз к тебе за помощью обращается человек, который хочет узнать что-то новое, дабы стать сильнее."
                + "Проанализируй информацию, которою он тебе дал и составь лучший совет, который поможет ему спрогрессировать."
                + "Учти, что у собеседника нет возможности обратиться к персональному тренеру. Он может попросить о помощи лишь тебя."
                + "При своём ответе общайся с клиентом так, будто ты настоящий человек. Не используй фразы о себе в третьем лице."
                + f"Отвечай на поставленные вопросы в следующем формате(в скобках будут пояснения, их писать не надо): {msg_format}",
            },
            {"role": "user", "text": message},
        ],
    }
    with httpx.Client() as client:
        request = client.post(url=settings.yandexgpt.url, headers=headers, json=prompt)
        try:
            result = request.json()["result"]["alternatives"][0]["message"]["text"]
        except:
            print(request.json())
            raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail="Something went wrong.")

        return result


# Челик выбрал упражнение а ai говорит стоит или нет делать это упражнение учитывая данные челика и цель его тренировок.

advice_for_exercise = (
    "Привет! Мне нужна твоя помощь. "
    + "Вот мои данные: пол {sex}, вес {weight}, height {height}, уровень подготовки {training_level}, "
    + "частота тренировок {training_frequency}. Расскажи мне, стоит ли мне выполнять следующее упражнение, "
    + "и если да, то подскажи правильную технику его выполнения: <{exercise_name}> на тренажёре <{equipment_name}>."
)
advice_for_exercise_format = (
    "Меры предосторожности перед выполнением(Группы лиц, кому противопоказано выполнение, а также травмы):\n"
    + "Разминка(напиши, что следует размять перед выполнением данного упражнения)\n"
    + "Техника выполнения:]\n"
)

advice_for_training_plan = (
    "Привет! Сегодня у меня тренировка и я планирую проработать группу мышц: грудь. Составь, пожалуйста, план тренировки на эту группу мышц."
    + "Вот мои данные: пол {sex}, вес {weight}, height {height}, уровень подготовки {training_level}, "
    + "частота тренировок {training_frequency}."
)

advice_for_training_plan_format = (
    "Не нужно писать ничего лишнего, просто напиши упражнения в примерно следующем формате: "
    + "10 отжиманий (3 подхода)\n15 подтягиваний (4 подхода) и т.д. Учти, что собеседник уже полностью размялся."
)

progress_assessment = (
    "Привет, на сегодняшний день результаты моих силовых тренировок таковы: Жим лёжа на горизонтальной скамье - 85 кг на 7 повторений"
    + "Подтягивания с дополнительным весом - 40 килограмм на 5 повторений"
    + "Присед со штангой - 110 килограмм на 9 повторений"
    + "Вот мои данные: пол {sex}, вес {weight}, height {height}, уровень подготовки {training_level}, "
    + "частота тренировок {training_frequency}."
    + "Три месяца назад мои силовые выглядели так: Жим лёжа на горизонтальной скамье - 75 кг на 6 повторений"
    + "Подтягивания с дополнительным весом - 35 килограмм на 3 повторения"
    + "Присед со штангой - 100 килограмм на 9 повторений. Оцени пожалуйста мой прогресс"
)

progress_assessment_format = (
    "Общий подсчёт прироста силовых(рассчитай насколько увеличились или уменьшились силовые)"
    + "Общее мнение о прогрессе за указанное время(оцени прогресс спортсмена)"
)
